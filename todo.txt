-clubdesport avis : relation parent + relation reponses ?
-why was cds asking for required booleans fields?
-ModelForm : relation_id thing instead of relation..
-voir clubdesport/clubmanagecontroller, c'est le foutoir
-boolean type should not be required!
-probleme quand push sur cds?

generator
	-(string)cast
	-coxisgenerator creates a field for relation_id...
	
#next
-git
	creer un projet coxis
		branches pour les evolutions
	et clone/pull pour l'utilisation dans d'autres projets
-sync differences between projects (amarante, cds, arpa)
-verifier les modifs avec le exception handler et le retour de reponse, notamment en test
	
#bug
-le generateur d'imagecache deconne, voir amarante..
-double slashes in coxis login (//admin)

#better improve this
-mieux gerer les exceptions
-model: annotations -> arrays
-fixup static_trigger/correct_filter
-refaire access() en object?
	take($obj)->get(5, 4, 2)
-publish assets, don't keep stuff in bundle/web/ (then they should not contain coxis php)
-revoir coxisadmin urls
-validator: message according to error (e.g. required : file required - or - file does not exists)
	& refaire tout validator..

#useful
-logging
-implementer namespace
-implementer i18n
-partial model form?
	pass an array with the attributes
-be able to create link with slug only by providing the id
-convert to array autotically when using only one "?" in sql queries (see sports/views/sport/index.php)
-a way to attach models to modelform when model is new ? see http://127.0.0.1/clubdesport/coxis/admin/sports/new
-controller/action for specific format (see SportController.php)
-routage sur callable et pas seulement controller/action
	-lambda functions (for exemple in comparator, controller hooks, and see what else)
-make HMABT required or not (done?)
-revoir gestion des erreurs pour Form et Messages pour ModelForm, Form, ..
-refaire tous les anciens form avec Form (et Form GET)
-Domain Canonicalization
-cascade delete on models relationships
-do something like this to separate categories..?
	http://www.playbac-editions-speciales.fr/administrator/equipe.php
-migrations

#?
-reflechir au fait que dans ModelForm, les tests se font a partir du model et non des contraintes du formulaire. Du coup par exemple, le label n'affiche pas d'* quand requis
-be able to put hasmany to a model without having belongsto in the other one.. for coxisgenerator
-autoset metas (et canonical?)
-pourquoi ckeditor ajoute une ligne en top ?
del-" test" * 50 dans le wysiwyg, met des espaces insecables..

ok-revoir in, multiple, array pour model properties
ok-reorganiser coxis js, et scripts de base : form, modal, slideshow, ...
ok-voir historique de euripiedes et arpa pour reduire les bugs
ok-a better adminform, e.g. arpa/newsletteradmin/
ok-fonction pour creer url au lieu de <?php echo Router::getAddress() ?> devant chaque url...
ok?-voir pour simplifier metas
	Metas::set?
ok-systeme d'url : http://laravel.com/docs/urls
ok-differencier contenu interne et pages avec metas
	value
ok-free fields (like in wordpress, and for example amarante > services > publication (should not belong to preferences))
ok-annotation: in, utiliser du code php ? pour i18n, etc. e.g. arpa/admin/choeurs/style_musical
	Model::configure()
ok?-revoir gestion des parametres widget dans le form, notamment multiple (e.g. arpa/admin/choeurs/style_musical)
ok-adminform not extending modelform
ok-refaire date type (init an object which can then be used to format the date.. and date type in database)
ok-voir amarante > services > page pour custom form (c'est d'la bombe !)
ok-handle http methods in routing, e.g. arpa/annuairecontroller depot submit..


-prefix et suffix dans le form admin ?

ok-faire un systeme a la wordpress pour les champs de preferences
ok-model::behavior() in plural
ok-SoC : separate model behaviors
ok-cascade delete on files
ok-check php5.3
ok-mettre ckfinder medias dans web/
ok-add files to form
ok-add ->default() to form widget & exceptions if wrong type
ok-speed up execution..? http://euripides.hognerud.net est assez long...
ok-ne plus prendre les routes plus longues que necessaires : e.g. /speakers17 pour /speakers

#BUGS/ISSUES
ok-htmlentities les index de l'admin (voir http://127.0.0.1/poissy/php/web/admin)
ok-ckeditor config.js links are relative.. not good
	-repare relative path for kcfinder
ok-bug dans le multiupload: quand on vient d'ajouter une image et qu'on la supprime, ca supprime celle d'avant
ok-pouvoir supprimer un fichier optionnel dans coxis admin
ok-standardize wysiwyg

#NEEDED
ok-be able to ::find() only one item..
ok-handle model order in Model, not in controller?
ok-model attribut enum (voir lebondil::bien)
ok-form checkboxes/radios/select and stuff
ok-remplacer number par limit
ok-inverser l'ordre de position (que asc soit par defaut)
ok-make relationship required or not
ok-handle hasOne/hasOne (difference with belongsto is that both should always point to each other)
ok-clean up ImageManager
ok-mix core/libs ?
ok-re-organize web/ folders & files
cancelled?-refaire imagecache, sans subsets mais avec les traitements en url
	-not sure that's safe. flood
ok-url_for c'est la merde
ok-meta behavior?
ok-probleme avec filterform->relationship (doit passer un model?)
	-Search ok
	-Filter cancelled
ok-model attribute date type (with filters & validator) + use automatically use calendar in admin

#GENERATOR
	select
	unique coxis admin
	-coxis admin index
	
#TO THINK ABOUT
-controller hooks with lambda functions?
ok-apply behavior automatically on find() for example
	like publish behavior, only get active elements
	but should still be able to get all in admin
ok-un meilleur moyen pour gerer l'actif d'un menu?
-revoir la gestion des lien du coxis admin menu via les bundles..
	not very intuitive
	output is a bit messed up
-a way to fetch all specific attributes of relations (see intranetcontroller)
-format admin views?
	when i edit something i have to edit it in all views..
-reflechir au probleme d'url pour les admin/forums/ avec sortable
	forums/:forum_id/speakers/:id/edit
-ne pas avoir a construire de nouveaux bundles pour des contenus similaires ?
	pouvoir separer des models identiques mais avec une semantique differente (bloc accueil pour euripides)
-faire ajout d'attributs comme pour http://127.0.0.1/euripides/coxis/admin/projects/5/edit ou  poissy::atheltes::palmares
	-en parallele, voir pour implementer aussi les zones de ponderation de CdS
-improve performance
	gzip (files and php)
		ok-coxis
		-files
	php caching
	combined files (js, css, )
	css sprites/images (css requirement)
	expires/cache-controler headers
	css at the top, script at the bottom
	minify
	etags
	keep components under 25k
-rendre les classes independantes. Database, models, etc. pour etre reutilise dans d'autres projets.
-un systeme de migration (ne pas avoir a impacter la db distante a chaque maj...) a la rails ?

<?php
//seo
	canonical
	301
	sitemap robots.txt
//seo tools
	http://www.seomoz.org/tools
//seo tips
	semantically connected words + phrases
	block-level optimization
	internal external links (linking to good content)
	happiness of visitors
		do they perform actions
		spending more time
		people coming back
	content uniqueness and formating
		reading level and correctness
	internal linking (pop up hidden content)

//whitelisting rights
	ok//inherits rights and layout from adminparentcontroller
	//add filters and remove them (not urgent)
ok//find another way to display attributes in form, with htmlentities..
	ok//htmlentities by default?
ok//redirect after login
ok//Models
ok//terminer imagecache
ok//add crop and resizecrop in imagecache
ok//auto slug
ok//created at + updated at
ok//remember admin + auto redirect when logged in
ok-form//get a var withing view without notice undefined
ok//put error messages and validators in model
ok//error messages per field
done?//MODELS: handle real attributes and virtual attributes
ok//no view should give no layout
ok//take spaces in routes
ok//model destroy + affected rows
ok//sauvegarder dans new form
ok//pagination with models
	//Model::paginate = query ? or give conditions and all params ? like Model::paginate($conditions, ..)
	
ok//todo better ORM: http://book.cakephp.org/fr/view/1017/R%C3%A9cup%C3%A9rer-vos-donn%C3%A9es
	//get num with using database but by model..
ok//handle files/images in model
	//file validators in models
	//put image paths in models
ok//add default to model property (e.g. actualite->vues default to 0)

//relationships
	//handle updates (add / remove from collection)
//lib cookie
	
//set include au lieu la constante
	
//add route keys and url helpers
//handle http methods in routing
//filters
//add good wysiwyg
//reload loader (init) with OOP
ok//handle 301 (id with slug) and redirect to the right URI
//separate core bundles and dev bundles

//tester sur shared hosting + local

//(caching)
//add some filters.. like actualite for commentaires

class Commentaire extends Model {
	/**
	@Type(text)
	@Size(255)
	@Required
	*/
	private $nom;
	/**
	@Type(text)
	@Default(blabla)
	*/
	private $commentaire;
	/**
	RELATION: actualite
	many to one
	many to many
	one to many
	one to one
	@Type(Relation)
	@Relation(relation='actualite', type='belongsTo')
	*/
	private $actualite;
	
	
	$validators = $commentaire->generateValidators();
		array(
			'nom'	=>	array(
				'required'	=>	true,
				'type'			=>	'type',
				'size'			=>	255
		);
	$map = array(
		'nom'	=>	'input_nom'
	);
	$messages = array(
		'nom'	=>
			array(
				'required'	=>	'Nom is required',
				'type'			=>	'Nom must be text..',
				'_default'	=>	'Nom is invalid.'
			)
	);
	$validators->map($map);
	$values = $_POST;
	$errors = Validate::validate($validators, $values, $messages);
	
	
	$constrains = Commentaire::getConstrains()->map(array(
		'nom'	=>	'input_nom'
	));
	$values = $_POST;
	/* do stuff with $values... */
	$messages = array(
		'nom'	=>
			array(
				'required'	=>	'Nom is required',
				'type'			=>	'Nom must be text..',
				'_default'	=>	'Nom is invalid.'
			)
	);
	$validator = new Validator($constrains, $values, $messages); //$messages is optionnal and will provide default messages
	$errors = $validator->validate();
	
	
	$constrains = Commentaire::getInstance()->getConstrains()->map(array(
		'nom'	=>	'input_nom'
	));
	$values = $_POST;
	/* do stuff with $values... */
	$validator = new Validator($constrains); //$messages is optionnal and will provide default messages
	$allmessages = array(
		'nom'	=>
			array(
				'required'	=>	'Nom is required',
				'type'			=>	'Nom must be text..',
				'_default'	=>	'Nom is invalid.'
			)
	);
	$validator->setValues($values)->setMessages($allmessages);
	$errors = $validator->validate();
	
	
	$commentaire->getActualite();
	
	
	$this->prepareForView(Actualite::getInstance());
	$this->view = 'form.php';
	
	
	if(!$commentaire->set($values))
		//something went wrong
	else
		$commentaire->save();
	
	protected $_attributes = array(
			'nom',
			'commentaire'
		);
}